{"version":3,"sources":["Components/Movie.js","Components/GlobalStyle.js","Components/App.js","index.js"],"names":["Summary","styled","p","Title","h2","Year","h5","Image","div","Poster","props","bgImage","Genres","ul","Item","li","Info","Container","Movie","movie","title","year","genres","summary","poster","medium_cover_image","length","slice","map","genre","index","key","GlobalStyle","createGlobalStyle","reset","Loader","span","Movies","App","state","isLoading","moives","getMovies","a","axios","get","movies","data","console","log","setState","this","id","React","Component","ReactDOM","render","document","getElementById"],"mappings":"8wDAGA,IAAMA,EAAUC,UAAOC,EAAV,KAKPC,EAAQF,UAAOG,GAAV,KAKLC,EAAOJ,UAAOK,GAAV,KAIJC,EAAQN,UAAOO,IAAV,KASLC,EAASR,UAAOO,IAAV,KAKc,SAACE,GAAD,OAAWA,EAAMC,WAMrCC,EAASX,UAAOY,GAAV,KAKNC,EAAOb,UAAOc,GAAV,KAMJC,EAAOf,UAAOO,IAAV,KAMJS,EAAYhB,UAAOO,IAAV,KAmCAU,EAtBD,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACPC,EAA6DD,EAA7DC,MAAOC,EAAsDF,EAAtDE,KAAMC,EAAgDH,EAAhDG,OAAQC,EAAwCJ,EAAxCI,QAA6BC,EAAWL,EAA/BM,mBACtC,OACE,kBAACR,EAAD,KACE,kBAACV,EAAD,KACE,kBAACE,EAAD,CAAQE,QAASa,KAEnB,kBAACR,EAAD,KACE,kBAACb,EAAD,KAAQiB,EAAMM,OAAS,GAAf,UAAuBN,EAAMO,MAAM,EAAG,IAAtC,OAAiDP,GACzD,kBAACf,EAAD,KAAOgB,GACP,kBAACT,EAAD,KACGU,GACCA,EAAOM,KAAI,SAACC,EAAOC,GAAR,OAAkB,kBAAChB,EAAD,CAAMiB,IAAKD,GAAQD,OAEpD,kBAAC7B,EAAD,KACGuB,EAAQG,OAAS,IAAjB,UAA0BH,EAAQI,MAAM,EAAG,KAA3C,OAAuDJ,M,sUC/ElE,IAWeS,EAXKC,4BAAH,IACbC,K,icCEJ,IAAMjB,EAAYhB,UAAOO,IAAV,KAET2B,EAASlC,UAAOmC,KAAV,KASNC,EAASpC,UAAOO,IAAV,KAqDG8B,E,kDA5Cb,aAAe,IAAD,8BACZ,gBAGFC,MAAQ,CACNC,WAAW,EACXC,OAAQ,IANI,EAQdC,UARc,sBAQF,8BAAAC,EAAA,sEAKAC,IAAMC,IAAI,6CALV,gBAGEC,EAHF,EAERC,KACEA,KAAQD,OAGZE,QAAQC,IAAIH,GACZ,EAAKI,SAAS,CAAEJ,SAAQN,WAAW,IAPzB,2CANVQ,QAAQC,IAAI,eAFA,E,gEAkBZD,QAAQC,IAAI,SACZE,KAAKT,c,2CAGLM,QAAQC,IAAI,Y,+BAGZD,QAAQC,IAAI,UADL,MAEuBE,KAAKZ,MAA3BC,EAFD,EAECA,UAAWM,EAFZ,EAEYA,OACnB,OACE,kBAAC,EAAD,KACE,kBAAC,EAAD,MACCE,QAAQC,IAAIT,GACZA,EACC,kBAACL,EAAD,mBAEA,kBAACE,EAAD,KACGS,GACCA,EAAOlB,KAAI,SAACT,GAAD,OAAW,kBAAC,EAAD,CAAOY,IAAKZ,EAAMiC,GAAIjC,MAAOA,a,GArC/CkC,IAAMC,WCrBxBC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.62080a9a.chunk.js","sourcesContent":["import React from \"react\";\nimport styled from \"styled-components\";\n\nconst Summary = styled.p`\n  height: 100%;\n  overflow: hidden;\n`;\n\nconst Title = styled.h2`\n  font-size: 1.2em;\n  margin-bottom: 5px;\n`;\n\nconst Year = styled.h5`\n  margin-bottom: 5px;\n`;\n\nconst Image = styled.div`\n  width: 100%;\n  height: 100%;\n  border-radius: 10px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Poster = styled.div`\n  width: 120px;\n  height: 100%;\n  border-radius: 12px;\n\n  background-image: url(${(props) => props.bgImage});\n  background-size: contain;\n  background-position: center center;\n  background-repeat: no-repeat;\n`;\n\nconst Genres = styled.ul`\n  display: flex;\n  margin-bottom: 5px;\n`;\n\nconst Item = styled.li`\n  &:not(:last-child) {\n    margin-right: 10px;\n  }\n`;\n\nconst Info = styled.div`\n  display: flex;\n  flex-direction: column;\n  word-break: break-all;\n`;\n\nconst Container = styled.div`\n  width: 450px;\n  height: 200px;\n  display: grid;\n  padding: 10px;\n  grid-template-columns: 135px auto;\n  gap: 10px;\n  border-radius: 15px;\n  margin-bottom: 15px;\n  box-shadow: 0 13px 27px -5px rgba(50, 50, 93, 0.25),\n    0 8px 16px -8px rgba(0, 0, 0, 0.3), 0 -6px 16px -6px rgba(0, 0, 0, 0.025);\n`;\n\nconst Movie = ({ movie }) => {\n  const { title, year, genres, summary, medium_cover_image: poster } = movie;\n  return (\n    <Container>\n      <Image>\n        <Poster bgImage={poster} />\n      </Image>\n      <Info>\n        <Title>{title.length > 25 ? `${title.slice(0, 25)}...` : title}</Title>\n        <Year>{year}</Year>\n        <Genres>\n          {genres &&\n            genres.map((genre, index) => <Item key={index}>{genre}</Item>)}\n        </Genres>\n        <Summary>\n          {summary.length > 250 ? `${summary.slice(0, 250)}...` : summary}\n        </Summary>\n      </Info>\n    </Container>\n  );\n};\n\nexport default Movie;\n","import { createGlobalStyle } from \"styled-components\";\nimport reset from \"styled-reset\";\n\nconst GlobalStyle = createGlobalStyle`\n  ${reset}\n  * {\n    box-sizing: border-box\n  }\n  body {\n    font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue', sans-serif;\n    background-color: #eff3f7;;\n  }\n`;\n\nexport default GlobalStyle;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport axios from \"axios\";\nimport Movie from \"./Movie\";\nimport GlobalStyle from \"./GlobalStyle\";\n\nconst Container = styled.div``;\n\nconst Loader = styled.span`\n  font-size: 30px;\n  width: 100%;\n  height: 100vh;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst Movies = styled.div`\n  display: flex;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-wrap: wrap;\n  padding: 20px;\n`;\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    console.log(\"Constructor\");\n  }\n  state = {\n    isLoading: true,\n    moives: [],\n  };\n  getMovies = async () => {\n    const {\n      data: {\n        data: { movies },\n      },\n    } = await axios.get(\"https://yts-proxy.now.sh/list_movies.json\");\n    console.log(movies);\n    this.setState({ movies, isLoading: false });\n  };\n  componentDidMount() {\n    console.log(\"Mount\");\n    this.getMovies();\n  }\n  componentDidUpdate() {\n    console.log(\"Update\");\n  }\n  render() {\n    console.log(\"Render\");\n    const { isLoading, movies } = this.state;\n    return (\n      <Container>\n        <GlobalStyle />\n        {console.log(isLoading)}\n        {isLoading ? (\n          <Loader>Loading...</Loader>\n        ) : (\n          <Movies>\n            {movies &&\n              movies.map((movie) => <Movie key={movie.id} movie={movie} />)}\n          </Movies>\n        )}\n      </Container>\n    );\n  }\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./Components/App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}